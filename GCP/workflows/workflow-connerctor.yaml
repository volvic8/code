# This workflow demonstrates how to use the Cloud Workflow Executions connector
# to create an execution for a workflow. Make sure the workflow
# already exists in your project.
# Expected successful output: "SUCCESS"

- init:
    assign:
      - project: ${sys.get_env("GOOGLE_CLOUD_PROJECT_ID")}
      - location: ${sys.get_env("GOOGLE_CLOUD_LOCATION")}
      - workflow: "log-workflow"  # Make sure this workflow exists in your project.
      - arguments:
          hello: world
          integer: 100
          boolean: true
# The run helper method is the preferred way to execute a workflow as it doesn't require
# encoding the workflow arguments in a JSON-formatted string. To compare
# the usage, we list two demo steps:
- run_execution:
    call: googleapis.workflowexecutions.v1.projects.locations.workflows.executions.run
    args:
      workflow_id: ${workflow}
      location: ${location}
      project_id: ${project}
      argument: ${arguments}  # Arguments could be specified inline as a map instead.
    result: r1
- create_execution:
    call: googleapis.workflowexecutions.v1.projects.locations.workflows.executions.create
    args:
      parent: ${"projects/" + project + "/locations/" + location + "/workflows/" + workflow}
      body:
        argument: ${json.encode_to_string(arguments)}
    result: r2
- the_end:
    return:
      - ${r1}
      - ${r2}